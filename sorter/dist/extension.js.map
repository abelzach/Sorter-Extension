{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCtBA,eAQA,SAASQ,EAAcC,GACtB,MAAMC,EAASC,EAAOC,OAAOC,iBAC7B,IAAIH,EAEH,YADAI,QAAQC,IAAI,2BAIb,MAAMC,EAAYN,EAAOM,UACnBC,EAAQD,EAAUC,MAClBC,EAAMF,EAAUE,IAEhBC,EAAe,IAAIR,EAAOS,UAAUH,EAAMI,KAAM,EAAGH,EAAIG,KAAK,EAAG,GAE/DC,EADOZ,EAAOa,SAASC,QAAQL,GAClBM,MAAM,SAGzBH,EAAMI,MAAK,CAACC,EAAEC,IAAOnB,EAAckB,EAAEE,cAAcD,GAAKA,EAAEC,cAAcF,KAGxEjB,EAAOoB,MAAMC,IACZA,EAAYC,QAAQb,EAAcG,EAAMW,KAAK,MAAM,IAGpDvB,EAAOM,UAAYG,CACpB,CAEA,SAASe,EAAgBC,EAAkCC,EAAiBC,GAC3E,MAAMC,EAAa3B,EAAO4B,SAASL,gBAAgBE,EAASC,GAC5DF,EAAQK,cAAcC,KAAKH,EAC5B,CAnCA,oBAAyBH,GAExBD,EAAgBC,EAAS,wBAAwB,IAAM3B,GAAc,KACrE0B,EAAgBC,EAAS,yBAAyB,IAAM3B,GAAc,IACvE,EAiCA,wBAA8B,C","sources":["webpack://sorter/external commonjs \"vscode\"","webpack://sorter/webpack/bootstrap","webpack://sorter/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\n\nexport function activate(context: vscode.ExtensionContext) {\n\t// console.log('Sorter extension activated.');\n\tregisterCommand(context, 'sorter.sortAscending', () => sortSelection(true));\n\tregisterCommand(context, 'sorter.sortDescending', () => sortSelection(false));\n}\n\nfunction sortSelection(isAscending: boolean) {\n\tconst editor = vscode.window.activeTextEditor;\n\tif(!editor) {\n\t\tconsole.log('No active editor found.');\n\t\treturn;\n\t}\n\n\tconst selection = editor.selection;\n\tconst start = selection.start;\n\tconst end = selection.end;\n\n\tconst newSelection = new vscode.Selection(start.line, 0, end.line+1, 0);\n\tconst text = editor.document.getText(newSelection);\n\tconst lines = text.split(/\\r?\\n/);\n\t\n\t// console.log('Before sorting:', lines);\n\tlines.sort((a,b) => (isAscending ? a.localeCompare(b) : b.localeCompare(a)));\n\t// console.log('After sorting:', lines);\n\n\teditor.edit((editBuilder) => {\n\t\teditBuilder.replace(newSelection, lines.join('\\n'));\n\t});\n\n\teditor.selection = newSelection;\n}\n\nfunction registerCommand(context: vscode.ExtensionContext, command: string, func: () => void) {\n\tconst disposable = vscode.commands.registerCommand(command, func);\n\tcontext.subscriptions.push(disposable);\n}\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","sortSelection","isAscending","editor","vscode","window","activeTextEditor","console","log","selection","start","end","newSelection","Selection","line","lines","document","getText","split","sort","a","b","localeCompare","edit","editBuilder","replace","join","registerCommand","context","command","func","disposable","commands","subscriptions","push"],"sourceRoot":""}